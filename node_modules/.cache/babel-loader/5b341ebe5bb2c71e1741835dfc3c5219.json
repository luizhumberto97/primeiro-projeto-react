{"ast":null,"code":"var _jsxFileName = \"/home/luiz/estudos/05-primeiro-projeto-react/src/pages/Dashboard/index.tsx\";\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories } from './styles';\n\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState([]); // FUnção para adicionar repositorio\n\n  async function handleAddRepository(event) {\n    event.preventDefault(); // Previne o comportamento padrão\n    //Verificar se o input está vazio\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositorio');\n    }\n\n    const response = await api.get(`repos/${newRepo}`); //console.log(response.data);\n\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n    setNewRepo(''); // LImpando o input\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"GitHub Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"Explore reposit\\xF3rios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value) //\n    ,\n    placeholder: \"Digite o nome do reposit\\xF3rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Pesquisar\")), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/luiz/estudos/05-primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","api","Title","Form","Repositories","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","logoImg","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAyC,OAAzC;AACA,SAASC,cAAT,QAA8B,gBAA9B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAGA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,QAA0C,UAA1C;;AAYA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAe,EAAf,CAAhD,CAHgC,CAKhC;;AAEA,iBAAea,mBAAf,CACEC,KADF,EAEkB;AACdA,IAAAA,KAAK,CAACC,cAAN,GADc,CACU;AAG1B;;AACA,QAAG,CAACR,OAAJ,EAAY;AACVG,MAAAA,aAAa,CAAC,oCAAD,CAAb;AACD;;AAKD,UAAMM,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAJ,CAAqB,SAAQV,OAAQ,EAArC,CAAvB,CAZgB,CAchB;;AACA,UAAMW,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AAGAP,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,UAAlB,CAAD,CAAf;AACAV,IAAAA,UAAU,CAAC,EAAD,CAAV,CAnBgB,CAmBA;AAGjB;;AAEC,sBACA,uDACA;AAAK,IAAA,GAAG,EAAEY,OAAV;AAAmB,IAAA,GAAG,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFA,eAGA,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEP,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEN,OAAd;AACA,IAAA,QAAQ,EAAGc,CAAD,IAAOb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAD3B,CAC6C;AAD7C;AAEA,IAAA,WAAW,EAAC,iCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAHA,eAWA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEZ,YAAY,CAACa,GAAb,CAAiBN,UAAU,iBACzB;AAAG,IAAA,GAAG,EAAEA,UAAU,CAACO,SAAnB;AAA8B,IAAA,IAAI,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,GAAG,EAAEP,UAAU,CAACQ,KAAX,CAAiBC,UAA3B;AACA,IAAA,GAAG,EAAET,UAAU,CAACQ,KAAX,CAAiBE,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASV,UAAU,CAACO,SAApB,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,UAAU,CAACW,WAAf,CAFG,CAHA,eAQA,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,CADF,CADF,CAXA,CADA;AAgCH,CAjED;;AAmEA,eAAevB,SAAf","sourcesContent":["import React, {useState, FormEvent} from 'react';\nimport { FiChevronRight} from 'react-icons/fi'\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Title, Form, Repositories } from './styles';\n\ninterface Repository{\n  full_name: string;\n  description:string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  // FUnção para adicionar repositorio\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>\n    ): Promise<void>{\n      event.preventDefault(); // Previne o comportamento padrão\n\n\n    //Verificar se o input está vazio\n    if(!newRepo){\n      setInputError('Digite o autor/nome do repositorio')\n    }\n\n\n\n\n    const response = await api.get<Repository>(`repos/${newRepo}`);\n\n    //console.log(response.data);\n    const repository = response.data;\n\n\n    setRepositories([...repositories, repository]);\n    setNewRepo(''); // LImpando o input\n\n\n  }\n\n    return (\n    <>\n    <img src={logoImg} alt=\"GitHub Explorer\" />\n    <Title>Explore repositórios no Github</Title>\n    <Form onSubmit={handleAddRepository}>\n      <input value={newRepo}\n      onChange={(e) => setNewRepo(e.target.value)} //\n      placeholder=\"Digite o nome do repositório\"/>\n      <button type=\"submit\">Pesquisar</button>\n    </Form>\n\n\n    <Repositories>\n     {repositories.map(repository => (\n        <a key={repository.full_name} href=\"teste\">\n        <img src={repository.owner.avatar_url}\n        alt={repository.owner.login}/>\n        <div>\n     <strong>{repository.full_name}</strong>\n     <p>{repository.description}</p>\n\n        </div>\n        <FiChevronRight size={20} />\n        </a>\n     ))}\n\n\n\n\n    </Repositories>\n  </>\n  )\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}