{"ast":null,"code":"var _jsxFileName = \"/home/luiz/estudos/05-primeiro-projeto-react/src/pages/Repository/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronsLeft, FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Header, RepositoryInfo, Issues } from './styles';\n\nconst Repository = () => {\n  const [repository, setRepository] = useState(null);\n  const [issues, setIssues] = useState([]);\n  const {\n    params\n  } = useRouteMatch();\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then(response => {\n      setRepository(response.data); //console.log(response.data);\n    });\n    api.get(`repos/${params.repository}/issues`).then(response => {\n      setIssues(response.data); //console.log(response.data);\n    });\n  }, [params.repository]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FiChevronsLeft, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), \"Voltar\")), repository && /*#__PURE__*/React.createElement(RepositoryInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, repository.description))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, repository.stargazers_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Stars\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, repository.forks_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Forks\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, repository.open_issues_count), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Issues abertas\")))), /*#__PURE__*/React.createElement(Issues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, issues.map(issue => /*#__PURE__*/React.createElement(Link, {\n    key: issue.id,\n    to: issue.html_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, issue.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, issue.user.login)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default Repository;","map":{"version":3,"sources":["/home/luiz/estudos/05-primeiro-projeto-react/src/pages/Repository/index.tsx"],"names":["React","useEffect","useState","useRouteMatch","Link","FiChevronsLeft","FiChevronRight","api","Header","RepositoryInfo","Issues","Repository","repository","setRepository","issues","setIssues","params","get","then","response","data","logoImg","owner","avatar_url","login","full_name","description","stargazers_count","forks_count","open_issues_count","map","issue","id","html_url","title","user"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useRouteMatch, Link} from 'react-router-dom';\nimport {FiChevronsLeft, FiChevronRight } from 'react-icons/fi';\nimport api from  '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Header, RepositoryInfo, Issues} from './styles';\n\n\ninterface RepositoryParams{\n  repository: string;\n}\n\ninterface Repository{\n  full_name: string;\n  description:string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n\n}\n\ninterface Issue{\n  id:number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n\n  }\n\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n const {params} = useRouteMatch<RepositoryParams>();\n\n useEffect(() => {\n  api.get(`repos/${params.repository}`).then((response) => {\n    setRepository(response.data);\n    //console.log(response.data);\n   });\n\n   api.get(`repos/${params.repository}/issues`).then((response) => {\n      setIssues(response.data);\n    //console.log(response.data);\n  });\n\n\n }, [params.repository]);\n\nreturn (\n  <>\n    <Header>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Link to=\"/\">\n        <FiChevronsLeft size={16} />\n        Voltar\n      </Link>\n    </Header>\n\n    {repository && (\n      <RepositoryInfo>\n      <header>\n        <img src={repository.owner.avatar_url} alt={repository.owner.login}/>\n        <div>\n          <strong>{repository.full_name}</strong>\n          <p>{repository.description}</p>\n        </div>\n      </header>\n\n      <ul>\n        <li>\n          <strong>{repository.stargazers_count}</strong>\n          <span>Stars</span>\n        </li>\n        <li>\n          <strong>{repository.forks_count}</strong>\n          <span>Forks</span>\n        </li>\n\n        <li>\n          <strong>{repository.open_issues_count}</strong>\n          <span>Issues abertas</span>\n        </li>\n      </ul>\n    </RepositoryInfo>\n    )}\n\n\n    <Issues>\n      {issues.map(issue => (\n        <Link key={issue.id} to={issue.html_url}>\n\n\n\n        <div>\n      <strong>{issue.title}</strong>\n      <p>{issue.user.login}</p>\n\n        </div>\n        <FiChevronRight size={20} />\n        </Link>\n      ))}\n\n\n\n    </Issues>\n  </>\n)\n}\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}